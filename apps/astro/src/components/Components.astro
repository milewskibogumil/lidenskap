---
import type { ComponentProps } from 'astro/types'
import SimpleCtaSection, { SimpleCtaSection_Query } from '@/components/global/SimpleCtaSection.astro'
import SplitContentImageGrid, { SplitContentImageGrid_Query } from '@/components/global/SplitContentImageGrid.astro'
import SimpleHeadingFullImage, { SimpleHeadingFullImage_Query } from '@/components/global/SimpleHeadingFullImage.astro'
import FeatureAccordionSection, {
  FeatureAccordionSection_Query,
} from '@/components/global/FeatureAccordionSection.astro'
import CtaSectionWithShapedImage, {
  CtaSectionWithShapedImage_Query,
} from '@/components/global/CtaSectionWithShapedImage.astro'
import ServicesOverview, { ServicesOverview_Query } from '@/components/global/ServicesOverview.astro'
import MetricsSection, { MetricsSection_Query } from '@/components/global/MetricsSection.astro'
import Faq, { Faq_Query } from '@/components/global/Faq.astro'
import IconGridWithCtaSection, { IconGridWithCtaSection_Query } from '@/components/global/IconGridWithCtaSection.astro'
import BorderedFullImage, { BorderedFullImage_Query } from '@/components/global/BorderedFullImage.astro'
import TwoColumnTextWithTags, { TwoColumnTextWithTags_Query } from '@/components/global/TwoColumnTextWithTags.astro'
import IrregularImagesAndHeader, {
  IrregularImagesAndHeader_Query,
} from '@/components/global/IrregularImagesAndHeader.astro'
import HighlightedPerson, { HighlightedPerson_Query } from '@/components/global/HighlightedPerson.astro'
import PeopleShowcase, { PeopleShowcase_Query } from '@/components/global/PeopleShowcase.astro'
import ImagesMarquee, { ImagesMarquee_Query } from '@/components/global/ImagesMarquee.astro'

const components = {
  SimpleCtaSection,
  SplitContentImageGrid,
  SimpleHeadingFullImage,
  FeatureAccordionSection,
  CtaSectionWithShapedImage,
  ServicesOverview,
  MetricsSection,
  Faq,
  IconGridWithCtaSection,
  BorderedFullImage,
  TwoColumnTextWithTags,
  IrregularImagesAndHeader,
  HighlightedPerson,
  PeopleShowcase,
  ImagesMarquee,
}

type ComponentsMap = {
  [Component in keyof typeof components]: {
    _type: Component
  } & ComponentProps<(typeof components)[Component]>
}

export type ComponentsProps = Array<ComponentsMap[keyof typeof components]>

type Props = {
  data: ComponentsProps
  indexStart?: number
}

const { data, indexStart = 0 } = Astro.props

export const Components_Query = /* groq */ `
  components[] {
    _type,
    ${SimpleCtaSection_Query}
    ${SplitContentImageGrid_Query}
    ${SimpleHeadingFullImage_Query}
    ${FeatureAccordionSection_Query}
    ${CtaSectionWithShapedImage_Query}
    ${ServicesOverview_Query}
    ${MetricsSection_Query}
    ${Faq_Query}
    ${IconGridWithCtaSection_Query}
    ${BorderedFullImage_Query}
    ${TwoColumnTextWithTags_Query}
    ${IrregularImagesAndHeader_Query}
    ${HighlightedPerson_Query}
    ${PeopleShowcase_Query}
    ${ImagesMarquee_Query}
  },
`
---

{
  data?.map((item, i) => {
    const DynamicComponent = components[item._type] as any
    if (!DynamicComponent) return null
    return <DynamicComponent {...item} index={indexStart + i} />
  })
}
