---
import PortableText, { PortableTextQuery, type PortableTextValue } from '@/src/components/ui/PortableText'
import Image, { ImageDataQuery, type ImageDataProps } from '@/src/components/ui/Image'
import Button, { ButtonDataQuery, type ButtonDataProps } from '@/components/ui/Button'

export const ProjectCard_Query = `
 ${ImageDataQuery('img')}
  name,
  "slug": slug.current,
`

export const FeaturedProjects_Query = `
  _type == "FeaturedProjects" => {
    ${PortableTextQuery('heading')}
    ${ButtonDataQuery('cta')}
    "isSelectedProjects": projects != null,
    "projects": select(projects != null =>
      projects[] -> {
        ${ProjectCard_Query}
      },
      *[_type == "Project_Collection"][] | order(endDate desc)[0..4] {
        ${ProjectCard_Query}
      },
    ),
  },
`

export type Props = {
  index: number
  heading: PortableTextValue
  cta: ButtonDataProps
  isSelectedProjects: boolean
  projects: Array<{
    img: ImageDataProps
    name: string
    slug: string
  }>
  excludeSlug?: string
}

const { index, heading, cta, isSelectedProjects, projects: _projects, excludeSlug } = Astro.props

const projects = isSelectedProjects
  ? _projects.slice(0, 4)
  : _projects.filter((project) => project.slug !== excludeSlug).slice(0, 4)
---

<section class="FeaturedProjects">
  <header>
    <PortableText value={heading} heading={index === 0 ? 'h1' : 'h2'} class="h2 heading" />
    <Button {...cta} />
  </header>
  <div class="projects">
    {
      projects.map(({ img, name, slug }) => (
        <article>
          <a href={slug} class="project-link">
            <div class="img">
              <Image {...img} sizes="(max-width: 28rem) 100vw, (max-width: 38rem) 19rem, 25vw" priority={index === 0} />
            </div>
            <h3 class="h3">{name}</h3>
          </a>
        </article>
      ))
    }
  </div>
</section>

<style lang="scss">
  .FeaturedProjects {
    padding: clamp(3rem, calc(4vw / 0.48), 5rem) 0;
    header {
      margin-bottom: clamp(1.25rem, calc(2vw / 0.48), 2rem);
      .heading {
        margin-bottom: clamp(0.5rem, calc(1vw / 0.48), 1rem);
      }
    }
    .projects {
      display: grid;
      gap: 0.75rem;
      grid-template-columns: 1fr 1fr 1fr 1fr;
      .project-link {
        display: block;
        &:hover,
        &:focus-visible {
          img {
            transform: scale(1.03);
          }
        }
        .img {
          aspect-ratio: 48/61;
          overflow: hidden;
          img {
            height: 100%;
            transition: transform 800ms var(--easing);
          }
        }
        h3 {
          margin-top: 0.25rem;
        }
      }
    }
    @media (max-width: 63rem) {
      margin: 0 auto;
      max-width: 38rem;
      .projects {
        grid-template-columns: 1fr 1fr;
      }
    }
    @media (max-width: 28rem) {
      .projects {
        grid-template-columns: 1fr;
      }
    }
  }
</style>
